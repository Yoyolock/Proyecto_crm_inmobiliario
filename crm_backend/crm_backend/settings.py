"""
Django settings for crm_backend project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import django
from datetime import datetime, timedelta
from pathlib import Path
from decouple import config
from django.utils.encoding import smart_str
django.utils.encoding.smart_text = smart_str

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('CRM_SECRETKEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('CRM_DEBUG')

ALLOWED_HOSTS = config('CRM_ALLOWED_HOSTS', '').split(" ")

CORS_ORIGIN_ALLOW_ALL = True



# Application definition

INSTALLED_APPS = [
    #Apps django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #Bonus django
    'django_celery_beat',
    'django_celery_results',
    'django_inlinecss',
    'django_seed',
    'django_createsuperuserwithpassword',
    'djoser',
    'elasticsearch_dsl',
    #Apps rest
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'corsheaders',
    'drf_yasg',
    #App CRM
    'api_backend',
]
CSRF_TRUSTED_ORIGINS = ['http://localhost:3462']

#Configuracion ElasticSearch
ELASTICSEARCH_HOST = config('DB_HOST_ELASTIC_1')
ELASTICSEARCH_PORT = config('DB_PORT_ELASTIC_1')

#Configuracion conexion Elasticsearch
ELASTICSEARCH_DSL ={
    'default': {
        'hosts': f'{ELASTICSEARCH_HOST}:{ELASTICSEARCH_PORT}',
    },
}

# CSRF_COOKIE_HTTPONLY = False

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [],
    'DEFAULT_PERMISSION_CLASSES': [],
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
    # ],
    # Token types
    # "DEFAULT_AUTHENTICATION_CLASSES": [
    #     "rest_framework_simplejwt.authentication.JWTAuthentication",
    #     "rest_framework.authentication.SessionAuthentication"
    # ],
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'crm_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'crm_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': config('CRM_DB_ENGINE'),
        'NAME': config('CRM_DB_NAME'),
        'USER': config('CRM_DB_USER'),
        'PASSWORD': config('CRM_DB_PASSWORD'),
        'HOST': config('CRM_DB_HOST'),
        'PORT': config('CRM_DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# DJOSER = {
#     'PASSWORD_RESET_CONFIRM_URL': 
#     'reset_password/{uid}/{token}',
#     'ACTIVATION_URL': 'activation/{uid}/{token}',
#     'SEND_ACTIVATION_EMAIL': True,
#     'SEND_CONFIRMATION_EMAIL': True,
#     'TOKEN_MODEL': None,
#     'HIDE_USERS': True,
#     'SERIALIZERS': {
#     },
#     'PERMISSIONS': {
#         'activation': ['rest_framework.permissions.AllowAny'],
#         'password_reset': ['rest_framework.permissions.AllowAny'],
#         'password_reset_confirm': ['rest_framework.permissions.AllowAny'],
#         'set_password': ['djoser.permissions.CurrentUserOrAdmin'],
#         'username_reset': ['rest_framework.permissions.AllowAny'],
#         'username_reset_confirm': ['rest_framework.permissions.AllowAny'],
#         'set_username': ['djoser.permissions.CurrentUserOrAdmin'],
#         'user_create': ['rest_framework.permissions.AllowAny'],
#         'user_delete': ['djoser.permissions.CurrentUserOrAdmin'],
#         'user': ['djoser.permissions.CurrentUserOrAdmin'],
#         'user_list': ['djoser.permissions.CurrentUserOrAdmin'],
#         'token_create': ['rest_framework.permissions.AllowAny'],
#         'token_destroy': ['rest_framework.permissions.IsAuthenticated'],
#     }
# }

# # JWT settings
# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME': timedelta(days=2),
#     'REFRESH_TOKEN_LIFETIME': timedelta(days=5),
#     'ROTATE_REFRESH_TOKENS': False,
#     'BLACKLIST_AFTER_ROTATION': True,
#     'UPDATE_LAST_LOGIN': False,

#     'ALGORITHM': 'HS256',
#     'SIGNING_KEY': SECRET_KEY,
#     'VERIFYING_KEY': None,
#     'AUDIENCE': None,
#     'ISSUER': None,

#     'AUTH_HEADER_TYPES': ('JWT',),
#     'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
#     'USER_ID_FIELD': 'id',
#     'USER_ID_CLAIM': 'user_id',
#     'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

#     'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
#     'TOKEN_TYPE_CLAIM': 'token_type',

#     'JTI_CLAIM': 'jti',

#     'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
#     'SLIDING_TOKEN_LIFETIME': timedelta(days=2),
#     'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=5),
# }

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


#Static files (CSS, JavaScript, Images) 
# https://docs.djangoproject.com/en/4.1/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static') 
STATIC_URL = '/static/' 
STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'  
MEDIA_ROOT = os.path.join(BASE_DIR,'media') 
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
